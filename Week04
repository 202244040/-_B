array = [11, 9, -77, 8]
for i in range(len(array)):
    print(f"{array[i]:3}, {id(array[i])}") # 파이썬은 배열을 가지고 있지 않음

--------------------------------------------------------------------------

l = [11, 9, -77, 8]
for i, v in enumerate(l):
    print(i, v )

    # l = [11, 9, -77, 8]
    # for i in range(len(l)):
    #     print(l, l[i])

--------------------------------------------------------------------------

def move_zeros(a_list):
    zero_index = 0
    for index, n in enumerate(a_list):
        if n != 0:
            a_list[zero_index] = n
            if zero_index != index:
                a_list[index] = 0
            zero_index += 1
    return(a_list)

a_list = [8, 0, 3, 0, 12]
move_zeros(a_list)
print(a_list)

--------------------------------------------------------------------------

groups = ['HOT', 'Seventeen', 'Black Pink', 'NJZ']
ratings = [1, 2, 4, 3]

group_rating = list(zip(groups, ratings))
print(group_rating) # ratings, groups 숫자가 안 맞으면 숫자가 적은 만큼 뜸

--------------------------------------------------------------------------

def duplicate_city(cities):
    result = list()
    s = set()

    for city in cities:
        l1 = len(s)
        s.add(city)
        l2 = len(s)
        if l1 == l2:
            result.append(city)
    return result

cities = ['Incheon', 'Incheon', 'Incheon', 'Gimpo', 'Seoul', 'Seoul']
# cities = {'Incheon', 'Incheon', 'Incheon', 'Gimpo', 'Seoul', 'Seoul'}
cities.append('Anyang')
cities.append('Seoul')
print(cities)
print(set(duplicate_city(cities)))
--------------------------------------------------------------------------

#def intersection(l1, l2):
#    l3 = list()
#    for v in l1:
#        if v in l2:
#           l3.append(v)
#   return l3
#
#l1 = [45, 5, 22, 31, 7, 19]
#l2 = [2, 1, 5, 22, 7, 38, 27, 19, 13, 41]
#print(intersection(l1, l2))
def inters(l1, l2):
    s1 = set(l1)
    s2 = set(l2)
    return list(s1 & s2) # return list(s1.intersection(s2))

l1 = [45, 5, 22, 31, 7, 19]
l2 = [2, 1, 5, 22, 7, 38, 27, 19, 13, 41]
print(inters(l1, l2))




